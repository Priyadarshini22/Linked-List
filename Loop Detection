class Node:
  def __init__(self,data):
    self.data=data
    self.next=None 
class Circular: 
   def __init__(self): 
      self.head=None 
   def push(self,data):
       new=Node(data) 
       temp=self.head 
       new.next=self.head 
       if self.head is not None:
          while temp.next !=self.head:
           temp=temp.next 
          temp.next=new 
       else:
           new.next=new 
       self.head=new  
   def detect(self):
       fast=self.head 
       slow=self.head 
       while fast.next and slow.next : 
          if fast!=slow:
           fast=fast.next.next 
           slow=next 
          else:
            return True
       return False 
   def print(self):
       temp=self.head 
       while temp:
         print(temp.data,end=' ')
         temp=temp.next
c=Circular()
l=[int(x) for x in input().split()]
for i in l:
  c.push(i)  
if c.detect():
    print("detect")
else:
    print("No loops") 
